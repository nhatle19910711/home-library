{
  "paths": {
    "/api/home-library/ping": {
      "get": {
        "operationId": "ping",
        "summary": "",
        "description": "Ping pong",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Ping"
        ]
      }
    },
    "/api/home-library/users": {
      "post": {
        "operationId": "createUser",
        "summary": "",
        "description": "Create a new user",
        "parameters": [
          {
            "required": true,
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateUserDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create a new user",
            "schema": {
              "$ref": "#/definitions/UserResDto"
            }
          },
          "400": {
            "description": "Create a new user",
            "schema": {
              "$ref": "#/definitions/BadRequestRes"
            }
          },
          "403": {
            "description": "Create a new user",
            "schema": {
              "$ref": "#/definitions/ForbiddenRes"
            }
          },
          "404": {
            "description": "Create a new user",
            "schema": {
              "$ref": "#/definitions/NotFoundRes"
            }
          },
          "500": {
            "description": "Create a new user",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorRes"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "operationId": "getALLUsers",
        "summary": "",
        "description": "Get all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get all users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserResDto"
              }
            }
          },
          "400": {
            "description": "Get all users",
            "schema": {
              "$ref": "#/definitions/BadRequestRes"
            }
          },
          "403": {
            "description": "Get all users",
            "schema": {
              "$ref": "#/definitions/ForbiddenRes"
            }
          },
          "404": {
            "description": "Get all users",
            "schema": {
              "$ref": "#/definitions/NotFoundRes"
            }
          },
          "500": {
            "description": "Get all users",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorRes"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/home-library/users/{id}": {
      "get": {
        "operationId": "getUserById",
        "summary": "",
        "description": "Get user by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id",
            "schema": {
              "$ref": "#/definitions/UserResDto"
            }
          },
          "400": {
            "description": "Get user by id",
            "schema": {
              "$ref": "#/definitions/BadRequestRes"
            }
          },
          "403": {
            "description": "Get all users",
            "schema": {
              "$ref": "#/definitions/ForbiddenRes"
            }
          },
          "404": {
            "description": "Get user by id",
            "schema": {
              "$ref": "#/definitions/NotFoundRes"
            }
          },
          "500": {
            "description": "Get user by id",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorRes"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updatePassword",
        "summary": "",
        "description": "Update password for user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "required": true,
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdatePasswordDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update password for user",
            "schema": {
              "$ref": "#/definitions/UserResDto"
            }
          },
          "400": {
            "description": "Update password for user",
            "schema": {
              "$ref": "#/definitions/BadRequestRes"
            }
          },
          "403": {
            "description": "Update password for user",
            "schema": {
              "$ref": "#/definitions/ForbiddenRes"
            }
          },
          "404": {
            "description": "Update password for user",
            "schema": {
              "$ref": "#/definitions/NotFoundRes"
            }
          },
          "500": {
            "description": "Update password for user",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorRes"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "operationId": "updatePassword",
        "summary": "",
        "description": "Delete user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete user"
          },
          "400": {
            "description": "Delete user",
            "schema": {
              "$ref": "#/definitions/BadRequestRes"
            }
          },
          "403": {
            "description": "Delete user",
            "schema": {
              "$ref": "#/definitions/ForbiddenRes"
            }
          },
          "404": {
            "description": "Delete user",
            "schema": {
              "$ref": "#/definitions/NotFoundRes"
            }
          },
          "500": {
            "description": "Delete user",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorRes"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "info": {
    "title": "api-home-library API",
    "description": "API Home Library | [swagger.json](/docs/home-library/swagger.json) | [swagger-2.0.json](/docs/home-library/swagger-2.0.json)",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "swagger": "2.0",
  "host": "127.0.0.1:4000",
  "schemes": [
    "http"
  ],
  "basePath": "/",
  "definitions": {
    "CreateUserDto": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "login",
        "password"
      ]
    },
    "UserResDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "version": {
          "type": "number"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "id",
        "login",
        "version",
        "createdAt",
        "updatedAt"
      ]
    },
    "BadRequestRes": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "number",
          "example": 400
        },
        "message": {
          "type": "string",
          "example": "Bad Request"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string",
          "example": "2024-02-22T07:26:18.708Z"
        },
        "path": {
          "type": "string",
          "example": "/api/home-library/users"
        }
      },
      "required": [
        "statusCode",
        "message",
        "timestamp",
        "path"
      ]
    },
    "ForbiddenRes": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "number",
          "example": 403
        },
        "message": {
          "type": "string",
          "example": "Forbidden"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string",
          "example": "2024-02-22T07:26:18.708Z"
        },
        "path": {
          "type": "string",
          "example": "/api/home-library/users"
        }
      },
      "required": [
        "statusCode",
        "message",
        "timestamp",
        "path"
      ]
    },
    "NotFoundRes": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "number",
          "example": 404
        },
        "message": {
          "type": "string",
          "example": "Not Found"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string",
          "example": "2024-02-22T07:26:18.708Z"
        },
        "path": {
          "type": "string",
          "example": "/api/home-library/users"
        }
      },
      "required": [
        "statusCode",
        "message",
        "timestamp",
        "path"
      ]
    },
    "InternalServerErrorRes": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "number",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string",
          "example": "2024-02-22T07:26:18.708Z"
        },
        "path": {
          "type": "string",
          "example": "/api/home-library/users"
        }
      },
      "required": [
        "statusCode",
        "message",
        "timestamp",
        "path"
      ]
    },
    "UpdatePasswordDto": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "required": [
        "oldPassword",
        "newPassword"
      ]
    }
  },
  "securityDefinitions": {
    "access-token": {
      "type": "apiKey",
      "in": "header",
      "name": "access-token"
    }
  },
  "x-components": {}
}